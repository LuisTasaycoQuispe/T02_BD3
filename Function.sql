

CREATE TABLE Galpon (
    Id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    capacity NUMBER,
    Lote VARCHAR2(5),
    State VARCHAR2(10) DEFAULT 'A',
    Fecha DATE DEFAULT SYSDATE,
    Type VARCHAR2(30),
    Ubigeo_Id NUMBER,
    CONSTRAINT PK_GALPONES PRIMARY KEY (ID)
);


INSERT INTO Galpon (capacity, Lote, Type, Ubigeo_Id)
VALUES (100, '123 A', 'Manual', 1);
INSERT INTO Galpon (capacity, Lote, Type, Ubigeo_Id)
VALUES (150, '456 B', 'Automatico', 2);
INSERT INTO Galpon (capacity, Lote, State, Type, Ubigeo_Id)
VALUES (200, '789 C', 'B', 'Manual', 3);
INSERT INTO Galpon (capacity, Lote, Type, Ubigeo_Id)
VALUES (300, '111 E', 'Manual', 5);

SELECT * FROM GALPON;



CREATE OR REPLACE FUNCTION obtener_capacidad_galpon(p_id NUMBER) RETURN NUMBER IS
    capacidad_galpon NUMBER;
BEGIN
    SELECT capacity INTO capacidad_galpon FROM Galpon WHERE Id = p_id;
    RETURN capacidad_galpon;
END;


SELECT obtener_capacidad_galpon(4) AS Capacidad_Galpon FROM dual;

----------------------------------------------------------------



CREATE OR REPLACE FUNCTION TipoGalpon(p_tipo_ingreso VARCHAR2) RETURN NUMBER IS
    cantidad_galpones NUMBER;
BEGIN
    IF p_tipo_ingreso = 'Manual' THEN
        SELECT COUNT(*) INTO cantidad_galpones FROM Galpon WHERE Type = 'Manual';
    ELSIF p_tipo_ingreso = 'Automatico' THEN
        SELECT COUNT(*) INTO cantidad_galpones FROM Galpon WHERE Type = 'Automatico';
    ELSE
        cantidad_galpones := 0;
    END IF;
    
    RETURN cantidad_galpones;
END;


SELECT TipoGalpon('Automatico') AS Galpon_Atutomatico,
TipoGalpon('Manual') AS Galpon_Manual
FROM dual;

----------------------------------------------------------------


CREATE OR REPLACE FUNCTION Consultar_Estado_Galpon_ID (
    p_id IN NUMBER
)
RETURN VARCHAR2
IS
    estado_galpon VARCHAR2(10);
BEGIN
    SELECT State INTO estado_galpon FROM Galpon WHERE Id = p_id;
    RETURN estado_galpon;
END;

SELECT Consultar_Estado_Galpon_ID(3) AS Estado_Galpon_ID
FROM DUAL;

----------------------------------------------------------------

CREATE OR REPLACE FUNCTION Tipo_Mas_Comun_Galpon RETURN VARCHAR2
IS
    tipo_mas_comun VARCHAR2(30);
BEGIN
    SELECT Type INTO tipo_mas_comun
    FROM (
        SELECT Type, COUNT(*) AS cantidad
        FROM Galpon
        GROUP BY Type
        ORDER BY COUNT(*) DESC
    )
    WHERE ROWNUM = 1;
    
    RETURN tipo_mas_comun;
END;

SELECT Tipo_Mas_Comun_Galpon() AS Tipo_Mas_Comun FROM DUAL;


----------------------------------------------------------------


CREATE OR REPLACE FUNCTION CapacidadMayor(p_capacidad_minima NUMBER) RETURN NUMBER IS
    cantidad_galpones NUMBER;
BEGIN
    SELECT COUNT(*) INTO cantidad_galpones FROM Galpon WHERE capacity > p_capacidad_minima;
    
    RETURN cantidad_galpones;
END;

SELECT CapacidadMayor(300) AS Cantidad_Galpones_Mayor FROM dual;
SELECT * FROM GALPON;


-- MELISSA --

CREATE TABLE Person (
    ID  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    Document_Type char(3),
    Document_Number varchar2(15),
    Names varchar2(20),
    Last_Names varchar2(20),
    Cellphone_Number char(9),
    Email varchar2(90),
    Password varchar2(20),
    State varchar2(10)  DEFAULT 'A',
    CONSTRAINT PK_PERSON PRIMARY KEY (ID)
) ;


--- EJEMPLO 1

CREATE OR REPLACE FUNCTION agregar_persona(p_document_type CHAR,
    p_document_number VARCHAR2,p_names VARCHAR2,p_last_names VARCHAR2,
    p_cellphone_number CHAR,p_email VARCHAR2,p_password VARCHAR2,
    p_state VARCHAR2 DEFAULT 'A'
) RETURN NUMBER IS
    nueva_persona_id NUMBER;
BEGIN
    INSERT INTO Person (
        Document_Type,Document_Number,Names,Last_Names,
        Cellphone_Number,Email,Password,State
    ) VALUES (
        p_document_type,p_document_number,p_names,
        p_last_names,p_cellphone_number,p_email,
        p_password,p_state
    ) RETURNING ID INTO nueva_persona_id;
    RETURN nueva_persona_id;
END;


DECLARE
    nueva_persona_id NUMBER;
BEGIN
    nueva_persona_id := agregar_persona('DNI', '8546932', 'Jesus', 'Sanchez', '987654321', 'jesus@gmail.com', 'jesus1234');
    DBMS_OUTPUT.PUT_LINE('Se agreg√≥ una nueva persona con el ID: ' || nueva_persona_id);
END;

SELECT * FROM PERSON
